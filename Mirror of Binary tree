#mirror of Binary tree

class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
  
def inorder(root):
    if root is None:
        return 
    inorder(root.left)
    print(root.data,end=" ")
    inorder(root.right)
def mirror(root):
    if root is None:
        return 
    mirror(root.left)
    mirror(root.right)
    root.left,root.right=root.right,root.left
    return root
    
# def traversal(root):
#     if root is None:
#         return 
#     print(root.data,end=" ")
#     traversal(root.left)
#     traversal(root.right)
    
root = Node(1)  
root.left = Node(2)  
root.right = Node(3)  
root.left.left = Node(4)  
root.left.right = Node(5) 
inorder(root)
mirror(root)
print()
inorder(root)
# traversal(root)
