class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        string=[]
        open = n
        close = n
        op=""
        self.solve(open,close,op,string)
        return string
        
    def solve(self,open,close,op,string):
        if (open == 0 and close == 0):
            string.append(op)
            return
        
        if (open != 0):
            op1=op
            op1+="("
            self.solve(open-1,close,op1,string)
            
        if (close > open):
            op2=op
            op2+=")"
            self.solve(open,close-1,op2,string)
        return
            
