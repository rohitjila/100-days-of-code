 # Method 1  Python -3
def isPalindrome(n):
    temp=n
    rev=0
    while (temp > 0):
        dig=temp%10
        rev=rev*10+dig
        temp=temp//10
    if (rev == n):
        return True
    else:
        return False
def Sum(n):
    temp=n
    s=0
    while (temp > 0):
        r=temp % 10
        s=s+r
        temp=temp//10
    return s
def display(n):
    s=Sum(n)
    if (isPalindrome(s)):
        return 1
    else:
        return 0
n=56
print(display(n))

// 2nd Method c++

#include <bits/stdc++.h>
using namespace std;
int Palindrome(int n)
{
    int temp=n;
    int rev=0;
    while (temp > 0)
    {
        int r=temp % 10;
        rev=rev*10+r;
        temp/=10;
    }
    // cout<<rev<<endl;
    if (rev == n)
    {
        return true;
    }
    else
    {
        return false;
    }
}
int Sum(int n)
{
    int temp=n;
    int s=0;
    while (temp > 0)
    {
        int r=temp % 10;
        s=s+r;
        temp=temp/10;
    }
    return s;
}

int isDigitSumPalindrome(int n) {
    
        int m=Sum(n);
        cout<<m<<endl;
        if (Palindrome(m))
        {
            return true;
        }
        else
        {
            return false;
        }
}


int main()
{
    int n;
    cin>>n;
    cout<<isDigitSumPalindrome(n)<<endl;
    return 0;
}
