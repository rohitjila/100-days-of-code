class Solution:
    def minCostConnectPoints(self, points: List[List[int]]) -> int:
        N = len(points)
        adj = {i : [] for i in range(N)}
        for i in range(N):
            x1,y1 = points[i]
            for j in range(i+1,N):
                x2,y2 = points[j]
                dist = abs(x1-x2) + abs(y1 - y2)
                adj[i].append([dist,j]) #[cost,node]
                adj[j].append([dist,i])
                
                
        res=0
        pq=[[0,0]]
        visit=set()
        while(len(visit)) < N:
            cost,node = heapq.heappop(pq)
            if node in visit:
                continue
            res+=cost
            visit.add(node)
            for nc,ni in adj[node]:
                if ni not in visit:
                    heapq.heappush(pq,([nc,ni]))
        return res
