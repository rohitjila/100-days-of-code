from heapq import heappop,heappush,heapify
def kthsmallest(arr,n,k):
    max_heap=[]
    for i in range(n):
        heappush(max_heap,-1*arr[i])
        if (len(max_heap) > k):
            max_heap.pop(0)
    return (max_heap[0]*-1)
arr=[7,10,4,3,20,15]
n=len(arr)
k=4
print(kthsmallest(arr,n,k))



from heapq import heappop,heappush,heapify
def kthlargest(arr,n,k):
    min_heap=[]
    for i in range(n):
        heappush(min_heap,arr[i])
        if (len(min_heap) > k):
            min_heap.pop(0)
    return (min_heap[0])
arr=[7,10,4,3,20,15]
n=len(arr)
k=1
print(kthlargest(arr,n,k))
