class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
        
def solve(root,arr):
    if root is None:
        return
    solve(root.left,arr)
    arr.append(root.data)
    solve(root.right,arr)
    
# def change(root,arr,i):
#     if root is None:
#         return
#     change(root.left,arr,i)
#     root.data=arr[i]
#     i+=1
#     change(root.right,arr,i)
def inorder(root):
    h={}
    arr=[]
    i=0
    solve(root,arr)
    print(arr)
    n=len(arr)
    ans=0
    temp=arr.copy()
    temp.sort()
    for i in range(n):
        h[arr[i]]=i
    init=0
    for i in range(n):
        if(arr[i] != temp[i]):
            ans+=1
            init=arr[i]
            arr[i],arr[h[temp[i]]]=arr[h[temp[i]]],arr[i]
            h[init]=h[temp[i]]
            h[temp[i]]=i
    print(ans)
    # change(root,arr,i)
    
root=Node(5)
root.left=Node(6)
root.right=Node(7)
root.left.left=Node(8)
root.left.right=Node(9)
root.right.left=Node(10)
root.right.right=Node(11)
print(inorder(root))
