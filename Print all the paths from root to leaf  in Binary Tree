# Time Complexity - O(n^2)
class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
        
def pr(root):
    path=[]
    printArray(root,path,0)
    
def printArray(root,path,pathlen):
    if root is None:
        return 
    if(len(path) > pathlen):
        path[pathlen]=root.data
        
    else:
        path.append(root.data)
    pathlen=pathlen+1
        
    if (root.left is None and root.right is None):
        Print(path,pathlen)
        
    else:
        printArray(root.left,path,pathlen)
        printArray(root.right,path,pathlen)
        
def Print(path,pathlen):
    for i in path[0:pathlen]:
        print(i,end=" ")
    print()
root = Node(10) 
root.left = Node(8) 
root.right = Node(2) 
root.left.left = Node(3) 
root.left.right = Node(5) 
root.right.left = Node(2) 
pr(root) 
    
