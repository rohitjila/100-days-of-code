#bridges in a graph
def dfs(adj,u,par,vis,l,d,time,lst):
    l[u]=d[u]=time
    time+=1
    vis[u]=1
    for v in adj[u]:
        if (vis[i] == 0):
            dfs(adj,v,u,vis,l,d,time,ap)
            l[u]=min(l[u],l[v])
            
            if (l[v] > d[u]):
                lst.append((u,v))
                
        elif(par != v):
            l[u]=min(l[u],d[v])
            
def bridges(V,adj):
    vis=[0]*V
    time=0
    l=[0]*V
    d=[0]*V
    lst=[]
    for i in range(V):
        if (vis[i] == 0):
            dfs(adj,i,-1,vis,l,d,time,lst)
    return lst
    
V,E=map(int,input().split())
adj=[[] for i in range(V)]
for i in range(E):
    u,v=map(int,input().split())
    adj[u].append(v)
    adj[v].append(u)
print(bridges(V,adj))
