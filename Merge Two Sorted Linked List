# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, head1: ListNode, head2: ListNode) -> ListNode:
        if (head1 == None):
		    return head2
        if (head2 == None):
            return head1
        temp1=head1
        temp2=head2
        dummy=Node(0)
        temp=dummy
        while(temp1 and temp2):
            if (temp1.val <= temp2.val):
                temp.next=temp1
                temp1=temp1.next
                temp=temp.next
            elif(temp2.val < temp1.val):
                temp.next=temp2
                temp2=temp2.next
                temp=temp.next

        if (temp1):
            temp.next=temp1
        if(temp2):
            temp.next=temp2
        return dummy.next
        dummy=curr=ListNode()
        while(l1 and l2):
            if (l1.val < l2.val):
                curr.next=l1
                l1=l1.next
            else:
                curr.next=l2
                l2=l2.next
                
            curr=curr.next
        curr.next=l1 or l2
        return dummy.next
    
    
        if (l1 == None): return l2
        if(l2 == None): return l1
        if (l1.val > l2.val):
            temp=l1
            l1=l2
            l2=temp
        res=l1
        while(l1 != None and l2 != None):
            temp=None
            while(l1 != None and l1.val <= l2.val):
                temp=l1
                l1=l1.next
            temp.next=l2
            
            temp=l1
            l1=l2
            l2=temp
        return res
            
        
        
