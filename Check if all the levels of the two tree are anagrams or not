class Node:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
        
        
def levels(root1,root2):
    if root1 == None and root2 == None:
        return True
    if root1 == None or root2 == None:
        return False
        
    q1=[]
    q2=[]
    q1.append(root1)
    q2.append(root2)
    
    while(1):
        n1=len(q1)
        n2=len(q2)
        
        if n1 != n2:
            return False
            
        if n1 == 0:
            break
        curr1=[]
        curr2=[]
        while(n1 > 0):
            node1=q1[0]
            q1.pop(0)
            
            if (node1.left != None):
                q1.append(node1.left)
            if (node1.right != None):
                q1.append(node1.right)  
                
            n1-=1
            
            node2=q2[0]
            q2.pop(0)
            
            if (node2.left != None):
                q2.append(node2.left)
            if (node2.right != None):
                q2.append(node2.right) 
                
            curr1.append(node1.data)
            curr2.append(node2.data)
            
        curr1.sort()
        curr2.sort()
        
        if (curr1 != curr2):
            return False
    return True
    
root1=Node(1)
root1.left=Node(3)
root1.right=Node(2)
root1.right.left=Node(5)
root1.right.right=Node(4)

root2=Node(1)
root2.left=Node(2)
root2.right=Node(3)
root2.left.left=Node(4)
root2.left.right=Node(5)

print(levels(root1,root2))
            
    
