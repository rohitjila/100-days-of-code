Brute Force

def longestPalin(self, s):
        arr=[]
        n=len(s)
        for i in range(n):
            for j in range(i+1,n+1):
                if (s[i:j] == s[i:j][::-1]):
                    arr.append(s[i:j])
        mx=max(arr,key=len)
        return mx
        
Brute Better
def longestPalin(self, s):
        # arr=[]
        # n=len(s)
        # for i in range(n):
        #     for j in range(i+1,n+1):
        #         if (s[i:j] == s[i:j][::-1]):
        #             arr.append(s[i:j])
        # mx=max(arr,key=len)
        # return mx
        n=len(s)
        start = 0
        maxlength=1
        for i in range(1,n):
            low=i-1
            high=i
            while(low >= 0 and high < n and s[low] == s[high]):
                if (high - low + 1 > maxlength):
                    start=low
                    maxlength=high-low+1
                    
                low-=1
                high+=1
                    
            low=i-1
            high=i+1
            while(low >= 0 and high < n and s[low] == s[high]):
                if (high - low + 1 > maxlength):
                    start=low
                    maxlength=high-low+1
                    
                low-=1
                high+=1
                    
                    
        return(s[start:start+maxlength])
            

        
        
